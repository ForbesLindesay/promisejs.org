{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/promise/lib/core.js","node_modules/promise/lib/es6-extensions.js","node_modules/promise/node_modules/asap/browser-asap.js","node_modules/promise/node_modules/asap/browser-raw.js","node_modules/promise/polyfill-done.js","node_modules/promise/polyfill.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","asap","noop","LAST_ERROR","IS_ERROR","getThen","obj","then","ex","tryCallOne","fn","tryCallTwo","b","Promise","this","TypeError","_37","_12","_59","doResolve","_99","prototype","onFulfilled","onRejected","constructor","safeThen","res","handle","Handler","self","resolve","reject","deferred","push","cb","promise","ret","newValue","finale","bind","done","value","reason","TRUE","valuePromise","FALSE","NULL","UNDEFINED","undefined","ZERO","EMPTYSTRING","p","all","arr","args","Array","slice","remaining","val","race","values","forEach","rawAsap","freeTasks","pendingErrors","requestErrorThrow","makeRequestCallFromTimer","throwFirstError","shift","task","rawTask","pop","RawTask","error","onerror","queue","requestFlush","flushing","index","capacity","flush","currentIndex","scan","newLength","BrowserMutationObserver","global","MutationObserver","WebKitMutationObserver","makeRequestCallFromMutationObserver","callback","toggle","observer","node","document","createTextNode","observe","characterData","requestCall","data","timeoutHandle","setTimeout","handleTimer","intervalHandle","setInterval","clearTimeout","clearInterval","arguments","apply","err"],"mappings":"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":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._37 = 0;\n  this._12 = null;\n  this._59 = [];\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._99 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._37 === 3) {\n    self = self._12;\n  }\n  if (self._37 === 0) {\n    self._59.push(deferred);\n    return;\n  }\n  asap(function() {\n    var cb = self._37 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._37 === 1) {\n        resolve(deferred.promise, self._12);\n      } else {\n        reject(deferred.promise, self._12);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._12);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._37 = 3;\n      self._12 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._37 = 1;\n  self._12 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._37 = 2;\n  self._12 = newValue;\n  finale(self);\n}\nfunction finale(self) {\n  for (var i = 0; i < self._59.length; i++) {\n    handle(self, self._59[i]);\n  }\n  self._59 = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._99);\n  p._37 = 1;\n  p._12 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._37 === 3) {\n            val = val._12;\n          }\n          if (val._37 === 1) return res(i, val._12);\n          if (val._37 === 2) reject(val._12);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n","\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\nvar BrowserMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","// should work in any browser without browserify\n\nif (typeof Promise.prototype.done !== 'function') {\n  Promise.prototype.done = function (onFulfilled, onRejected) {\n    var self = arguments.length ? this.then.apply(this, arguments) : this\n    self.then(null, function (err) {\n      setTimeout(function () {\n        throw err\n      }, 0)\n    })\n  }\n}","// not \"use strict\" so we can declare global \"Promise\"\n\nvar asap = require('asap');\n\nif (typeof Promise === 'undefined') {\n  Promise = require('./lib/core.js')\n  require('./lib/es6-extensions.js')\n}\n\nrequire('./polyfill-done.js');\n"]}